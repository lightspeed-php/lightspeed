#!/usr/bin/env php
<?php

use PHPUnit\TextUI\Command as TextUICommand;
use Lightspeed\API;
use Lightspeed\Command;
use Lightspeed\Providers\ProviderFactory;

(static function () {
    // Used when this is required using composer.
    $vendorPath = dirname(__DIR__, 4).'/vendor/autoload.php';

    // Used when maintainers are running tests.
    $localPath = dirname(__DIR__).'/vendor/autoload.php';

    if (file_exists($vendorPath)) {
        include_once $vendorPath;
    } else {
        include_once $localPath;
    }

    $provider = ProviderFactory::resolveProvider();

    // if no provider is found, we aren't running in CI so run as vanilla phpunit
    if ($provider === false) {
        $command = new TextUICommand();
        $command->run($_SERVER['argv']);
        return;
    }

    // require our overidden TestRunner as late as possible
    require_once __DIR__.'/../overrides/TextUI/TestRunner.php';

    $opts = [
        'url' => $_SERVER['LIGHTSPEED_BASE_URL'],
        'api_token' => $_SERVER['LIGHTSPEED_API_TOKEN'],
    ];
    $command = new Command(new Api($provider, $opts));

    $command->run($_SERVER['argv']);
})();
