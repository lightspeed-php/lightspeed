#!/usr/bin/env php
<?php

use PHPUnit\TextUI\Command as TextUICommand;
use Lightspeed\Command;
use Lightspeed\Providers\ProviderFactory;
use Lightspeed\TestRunner;

(static function () {
    // Used when this is required using composer.
    $vendorPath = dirname(__DIR__, 4).'/vendor/autoload.php';

    // Used when maintainers are running tests.
    $localPath = dirname(__DIR__).'/vendor/autoload.php';

    if (file_exists($vendorPath)) {
        include_once $vendorPath;
        $autoloadPath = $vendorPath;
    } else {
        include_once $localPath;
        $autoloadPath = $localPath;
    }

    $provider = ProviderFactory::resolveProvider();

    // if no provider is found, we aren't running in CI so run as vanilla phpunit
    if ($provider === false) {
        $command = new TextUICommand();
        $command->run($_SERVER['argv']);
        return;
    }

    // require our overidden TestRunner as late as possible
    require_once __DIR__.'/../overrides/TextUI/TestRunner.php';

    $testRunner = new TestRunner($provider);

    // detect if pest is present and use that instead
    if (class_exists(\Pest\Support\Container::class)) {
        require_once __DIR__.'/../overrides/Pest/Console/Command.php';

        $container = \Pest\Support\Container::getInstance();
        $container->add(TestRunner::class, $testRunner);

        $rootPath = dirname($autoloadPath, 2);
        require_once $rootPath.'/vendor/bin/pest';
    } else {
        $command = new Command($testRunner);

        $command->run($_SERVER['argv']);
    }
})();
